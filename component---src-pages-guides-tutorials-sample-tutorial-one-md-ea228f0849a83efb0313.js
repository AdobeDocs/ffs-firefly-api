"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[41],{74111:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return c},default:function(){return d}});var r=t(58168),o=t(80045),s=(t(88763),t(15680)),i=t(83407);const a=["components"],c={},u={_frontmatter:c},l=i.A;function d(e){let{components:n}=e,t=(0,o.A)(e,a);return(0,s.mdx)(l,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,s.mdx)("h1",{id:"refreshing-access-tokens-for-adobe-firefly-api"},"Refreshing Access Tokens for Adobe Firefly API"),(0,s.mdx)("h2",{id:"objective"},"Objective"),(0,s.mdx)("p",null,"Learn how to refresh access tokens for Adobe Firefly API to maintain continuous access to the API resources without requiring the user to reauthenticate."),(0,s.mdx)("h2",{id:"prerequisites"},"Prerequisites"),(0,s.mdx)("p",null,"Basic understanding of RESTful APIs\nAccess to Adobe Firefly API\nClient ID and client secret for authentication\nSteps:"),(0,s.mdx)("h2",{id:"understand-token-expiry"},"Understand Token Expiry"),(0,s.mdx)("p",null,"Access tokens issued by the Adobe Firefly API have a limited lifespan. It's important to monitor the expiry time of your tokens to avoid disruptions in your application's functionality.\nImplement Token Refresh Logic:"),(0,s.mdx)("p",null,"Before your access token expires, initiate a token refresh request to obtain a new access token. Use the /oauth/token endpoint for this purpose.\nInclude your client ID and client secret in the request body, along with the refresh token.\nExample request body:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-js"},'{\n  "client_id": "YOUR_CLIENT_ID",\n  "client_secret": "YOUR_CLIENT_SECRET",\n  "refresh_token": "YOUR_REFRESH_TOKEN",\n  "grant_type": "refresh_token"\n}\n')),(0,s.mdx)("h2",{id:"handle-the-response"},"Handle the Response"),(0,s.mdx)("p",null,"If the token refresh request is successful, the API will return a new access token along with a new refresh token (if applicable).\nUpdate your application's authentication credentials with the new access token and refresh token (if provided).\nError Handling:"),(0,s.mdx)("p",null,"If the token refresh request fails, handle the error appropriately based on the response from the API.\nCommon errors include expired refresh tokens or invalid client credentials."),(0,s.mdx)("h2",{id:"testing"},"Testing"),(0,s.mdx)("p",null,"Test your token refresh logic in a controlled environment to ensure that it works as expected.\nVerify that your application can seamlessly continue accessing Adobe Firefly API resources without requiring manual reauthentication."),(0,s.mdx)("h2",{id:"summary"},"Summary"),(0,s.mdx)("p",null,"Refreshing access tokens for Adobe Firefly API is essential for maintaining continuous access to API resources. By implementing token refresh logic in your application, you can ensure uninterrupted access to the API without the need for users to reauthenticate frequently."))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-tutorials-sample-tutorial-one-md-ea228f0849a83efb0313.js.map