{"version":3,"file":"component---src-pages-guides-how-tos-firefly-services-with-powerautomate-md-140ff1154e7518fda66d.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/guides/how-tos/firefly-services-with-powerautomate.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/firefly-api-docs/firefly-api-docs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"integrating-firefly-services-with-microsoft-power-automate\"\n    }}>{`Integrating Firefly Services with Microsoft Power Automate`}</h1>\n    <p>{`Microsoft's `}<a parentName=\"p\" {...{\n        \"href\": \"https://make.powerautomate.com\"\n      }}>{`Power Automate`}</a>{` is a powerful no-code solution that lets developers and non-developers alike create flexible workflows to automate processing using multiple different services. Firefly Services can be employed in the Power Automate platform and in this article, we'll walk you through the process of creating a sample workflow. Keep in mind that Power Automate is incredibly flexible and the example shown here is just one possible use of the platform.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`In order to complete this tutorial, you will need:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Firefly API credentials. You can sign up for `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/firefly-api\"\n        }}>{`free trial credentials`}</a>{` and use them for this tutorial. You will need two values: `}<inlineCode parentName=\"li\">{`client_id`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`client_secret`}</inlineCode>{`. `}</li>\n      <li parentName=\"ul\">{`An account with Microsoft and access to Power Automate. `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"workflow\"\n    }}>{`Workflow`}</h2>\n    <p>{`Our workflow will use the Firefly API to generate images. The steps involved are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Reading a set of prompts from a Microsoft list.`}</li>\n      <li parentName=\"ul\">{`Sending each prompt to Firefly.`}</li>\n      <li parentName=\"ul\">{`Taking the result and sending an email.`}</li>\n    </ul>\n    <p>{`For simplicity's sake, this flow will be manually triggered, but certainly, you could create a workflow that was dynamically triggered.`}</p>\n    <h2 {...{\n      \"id\": \"step-one---defining-our-prompts\"\n    }}>{`Step One - Defining our Prompts`}</h2>\n    <p>{`As described earlier, a Microsoft List will be used to define our prompts. We created a new list, named it \"Prompts\", and added two simple values in the first column.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"694px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"36.875%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/firefly-api-docs/static/55ee63870a458b3de43194916dde0a1e/5530d/shot1.webp 320w\", \"/firefly-api-docs/static/55ee63870a458b3de43194916dde0a1e/0c8fb/shot1.webp 640w\", \"/firefly-api-docs/static/55ee63870a458b3de43194916dde0a1e/a23a1/shot1.webp 694w\"],\n            \"sizes\": \"(max-width: 694px) 100vw, 694px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/firefly-api-docs/static/55ee63870a458b3de43194916dde0a1e/dd4a7/shot1.png 320w\", \"/firefly-api-docs/static/55ee63870a458b3de43194916dde0a1e/0f09e/shot1.png 640w\", \"/firefly-api-docs/static/55ee63870a458b3de43194916dde0a1e/91652/shot1.png 694w\"],\n            \"sizes\": \"(max-width: 694px) 100vw, 694px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/firefly-api-docs/static/55ee63870a458b3de43194916dde0a1e/91652/shot1.png\",\n            \"alt\": \"Microsoft List with two prompts\",\n            \"title\": \"Microsoft List with two prompts\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"step-two---create-the-flow\"\n    }}>{`Step Two - Create the Flow`}</h2>\n    <p>{`Next, create a new \"Instant\" Power Automate flow. This will let us test as needed and won't be tied to any automatic process. Everything demonstrated in this article absolutely `}<em parentName=\"p\">{`could`}</em>{` run in that type of scenario. `}</p>\n    <h2 {...{\n      \"id\": \"step-three---read-our-list\"\n    }}>{`Step Three - Read our List`}</h2>\n    <p>{`PowerAutomate has steps that automatically integrate with Lists, so the next step will be to add the \"Get items\" action from Sharepoint. This will require you to configure the Sharepoint site hosting the list and then select the list. `}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"624px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"62.18749999999999%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/firefly-api-docs/static/ea847dd31ff3b800aa4b8efa0ee37d32/5530d/shot2.webp 320w\", \"/firefly-api-docs/static/ea847dd31ff3b800aa4b8efa0ee37d32/5f6bc/shot2.webp 624w\"],\n            \"sizes\": \"(max-width: 624px) 100vw, 624px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/firefly-api-docs/static/ea847dd31ff3b800aa4b8efa0ee37d32/dd4a7/shot2.png 320w\", \"/firefly-api-docs/static/ea847dd31ff3b800aa4b8efa0ee37d32/08d47/shot2.png 624w\"],\n            \"sizes\": \"(max-width: 624px) 100vw, 624px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/firefly-api-docs/static/ea847dd31ff3b800aa4b8efa0ee37d32/08d47/shot2.png\",\n            \"alt\": \"Step configured to read list values\",\n            \"title\": \"Step configured to read list values\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`Note that we've renamed the action to \"Get Prompts\"`}</p>\n    <h2 {...{\n      \"id\": \"step-four---define-variables\"\n    }}>{`Step Four - Define Variables`}</h2>\n    <p>{`The next two actions aren't technically required, but help us out later in the flow. Create two actions to initialize variables. We're going to create two string values to store our Firefly authentication. The first one should use these values:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Name: FIREFLY_CLIENT_ID`}</li>\n      <li parentName=\"ul\">{`Type: String`}</li>\n      <li parentName=\"ul\">{`Value: Your client id`}</li>\n    </ul>\n    <p>{`Name this step, \"Set Firefly Client ID\".`}</p>\n    <p>{`The next one will use these values:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Name: FIREFLY_CLIENT_SECRET`}</li>\n      <li parentName=\"ul\">{`Type: String`}</li>\n      <li parentName=\"ul\">{`Value: Your client secret`}</li>\n    </ul>\n    <p>{`Name this step, \"Set Firefly Client Secret\".`}</p>\n    <p>{`At this point, your flow should look like so:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"259px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"177.992277992278%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/firefly-api-docs/static/ec85be9d4eca2c4aa569b5ee0580b3ec/5a68b/shot3.webp 259w\"],\n            \"sizes\": \"(max-width: 259px) 100vw, 259px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/firefly-api-docs/static/ec85be9d4eca2c4aa569b5ee0580b3ec/8b5e5/shot3.png 259w\"],\n            \"sizes\": \"(max-width: 259px) 100vw, 259px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/firefly-api-docs/static/ec85be9d4eca2c4aa569b5ee0580b3ec/8b5e5/shot3.png\",\n            \"alt\": \"The flow, so far\",\n            \"title\": \"The flow, so far\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"step-five---exchange-credentials\"\n    }}>{`Step Five - Exchange Credentials`}</h2>\n    <p>{`The next step will use the HTTP action to exchange our credentials for an access token. Add a new step, HTTP, and use the following URI:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`https://ims-na1.adobelogin.com/ims/token/v3?grant_type=client_credentials&client_id=@{variables('FIREFLY_CLIENT_ID')}&client_secret=@{variables('FIREFLY_CLIENT_SECRET')}&scope=openid,AdobeID,firefly_enterprise,firefly_api,ff_apis\n`}</code></pre>\n    <p>{`Note that as soon as you enter that value, the two `}<inlineCode parentName=\"p\">{`variables`}</inlineCode>{` section will change to reference the two earlier steps we defined. Set the method to POST and name the action, \"Get Access Token\".`}</p>\n    <p>{`Follow this with a \"Parse JSON\" step. The content value will point to the body of the previous step. The schema will be the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"type\": \"object\",\n    \"properties\": {\n        \"access_token\": {\n            \"type\": \"string\"\n        },\n        \"token_type\": {\n            \"type\": \"string\"\n        },\n        \"expires_in\": {\n            \"type\": \"integer\"\n        }\n    }\n}\n`}</code></pre>\n    <p>{`This was created by using the \"Use sample payload to generate schema\" support in the step and by passing in a previous authentication result. `}</p>\n    <p>{`The net result of these two steps is to get an access token for Firefly calls and parse the result so Power Automate can make use of it. `}</p>\n    <h2 {...{\n      \"id\": \"step-six---initialize-image-string\"\n    }}>{`Step Six - Initialize Image String`}</h2>\n    <p>{`Before we start using the API, we need to define a variable, \"images\", that we'll use for our results. Add a new step to initialize a variable with these values:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`name: images`}</li>\n      <li parentName=\"ul\">{`type: String`}</li>\n      <li parentName=\"ul\">{`value: Leave blank`}</li>\n    </ul>\n    <p>{`Name this step, \"Initialize Image String\".`}</p>\n    <p>{`At this point, your flow should look like so:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"256px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"303.90625%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/firefly-api-docs/static/60d71e9bccfb1a394a173bd8e42212d0/4fae8/shot4.webp 256w\"],\n            \"sizes\": \"(max-width: 256px) 100vw, 256px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/firefly-api-docs/static/60d71e9bccfb1a394a173bd8e42212d0/e3135/shot4.png 256w\"],\n            \"sizes\": \"(max-width: 256px) 100vw, 256px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/firefly-api-docs/static/60d71e9bccfb1a394a173bd8e42212d0/e3135/shot4.png\",\n            \"alt\": \"The flow, so far\",\n            \"title\": \"The flow, so far\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"step-seven---beginning-the-loop\"\n    }}>{`Step Seven - Beginning the Loop`}</h2>\n    <p>{`Our workflow will generate results for each prompt and email them, so now we add a new action, \"Apply to each\" (found in the \"Control\" section when adding a new action). You will be prompted to select an output to drive the looping. If you remember we read in our Microsoft List value in the beginning, so select that: `}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"750px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"43.4375%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/firefly-api-docs/static/49f7c4c096b7890f1be213b363a77d8e/5530d/shot5.webp 320w\", \"/firefly-api-docs/static/49f7c4c096b7890f1be213b363a77d8e/0c8fb/shot5.webp 640w\", \"/firefly-api-docs/static/49f7c4c096b7890f1be213b363a77d8e/3ea8a/shot5.webp 750w\"],\n            \"sizes\": \"(max-width: 750px) 100vw, 750px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/firefly-api-docs/static/49f7c4c096b7890f1be213b363a77d8e/dd4a7/shot5.png 320w\", \"/firefly-api-docs/static/49f7c4c096b7890f1be213b363a77d8e/0f09e/shot5.png 640w\", \"/firefly-api-docs/static/49f7c4c096b7890f1be213b363a77d8e/e9985/shot5.png 750w\"],\n            \"sizes\": \"(max-width: 750px) 100vw, 750px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/firefly-api-docs/static/49f7c4c096b7890f1be213b363a77d8e/e9985/shot5.png\",\n            \"alt\": \"Defining the loop variable\",\n            \"title\": \"Defining the loop variable\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`All of the next steps will be defined inside this loop. `}</p>\n    <h2 {...{\n      \"id\": \"step-eight---resetting-the-images-variable\"\n    }}>{`Step Eight - Resetting the Images Variable`}</h2>\n    <p>{`Back in step six, we created an image variable named, `}<inlineCode parentName=\"p\">{`images`}</inlineCode>{`. The point of this variable is to hold the results from Firefly so that it can be emailed. For each prompt we need to reset this value back to an empty string. So the first step inside our \"Apply to each\" loop is a \"Set the variable value\" action. It sets the variable, `}<inlineCode parentName=\"p\">{`images`}</inlineCode>{`, to null. You can do this by entering: `}<inlineCode parentName=\"p\">{`@{null}`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"step-nine---calling-fireflys-text-to-image-api\"\n    }}>{`Step Nine - Calling Firefly's Text-to-Image API`}</h2>\n    <p>{`Now for the fun part. We'll add another HTTP action that will call the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/firefly-api/api/#operation/v2/images/generate\"\n      }}>{`Text-to-Image`}</a>{` API. This API call requires just a few parameters, including the prompt and size, as well as the number of desired images if you want more than one. `}</p>\n    <p>{`Begin by setting the URI to the API endpoint, as specified in the documentation: `}<inlineCode parentName=\"p\">{`https://firefly-api.adobe.io/v2/images/generate`}</inlineCode>{`. `}</p>\n    <p>{`Next, set the method to `}<inlineCode parentName=\"p\">{`POST`}</inlineCode>{`. `}</p>\n    <p>{`To access the API, two credentials must be sent in the headers. Begin by specifying an `}<inlineCode parentName=\"p\">{`Authorization`}</inlineCode>{` header which will use the access token gotten earlier. This can be used by inputting this value: `}<inlineCode parentName=\"p\">{`Bearer @{body('Parse_JSON')?['access_token']}`}</inlineCode>{`. Next, the header `}<inlineCode parentName=\"p\">{`X-Api-Key`}</inlineCode>{` should be set with the Firefly Client ID specified earlier: `}<inlineCode parentName=\"p\">{`@{variables('FIREFLY_CLIENT_ID')}`}</inlineCode></p>\n    <p>{`The last thing required is the actual body of the request. The number of images and size will be hard coded, with the prompt being dynamic based on the loop value:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"n\": 4,\n  \"prompt\": \"@{items('Apply_to_each')?['Title']}\",\n  \"size\": {\n    \"width\": \"1024\",\n    \"height\": \"1024\"\n  }\n}\n`}</code></pre>\n    <p>{`This step should then be followed with a Parse JSON action again. Add that step and name it \"Parse Firefly Result JSON\". Point it to the Body of the previous step, and use this schema:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"type\": \"object\",\n    \"properties\": {\n        \"version\": {\n            \"type\": \"string\"\n        },\n        \"size\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"width\": {\n                    \"type\": \"integer\"\n                },\n                \"height\": {\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"predictedContentClass\": {\n            \"type\": \"string\"\n        },\n        \"outputs\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"seed\": {\n                        \"type\": \"integer\"\n                    },\n                    \"image\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\"\n                            },\n                            \"presignedUrl\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    }\n                },\n                \"required\": [\n                    \"seed\",\n                    \"image\"\n                ]\n            }\n        }\n    }\n}\n`}</code></pre>\n    <p>{`As before, the net result of these two steps is to make an HTTP call and parse the result into usable data. `}</p>\n    <h2 {...{\n      \"id\": \"step-ten---defining-image-html\"\n    }}>{`Step Ten - Defining Image HTML`}</h2>\n    <p>{`The next step will be twofold. We want to create a string variable for email that will include all the results from the Firefly call, but we want to define this in HTML. To do this, create another \"Apply to each\" step. This will use the output from the previous step that parsed the JSON result of the Firefly call: `}<inlineCode parentName=\"p\">{`@{body('Parse_Firefly_Result_JSON')?['outputs']}`}</inlineCode>{` Notice we're specifically using the `}<inlineCode parentName=\"p\">{`outputs`}</inlineCode>{` portion of the result which will contain one object per image result. `}</p>\n    <p>{`Within this loop, add an \"Append to String variable\" step. The variable will be `}<inlineCode parentName=\"p\">{`images`}</inlineCode>{`, and the value, this little bit of complex logic: `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`@{concat('<img src=\"',items('For_each')?['image']['presignedUrl'],'\">')}\n`}</code></pre>\n    <p>{`This value uses the `}<inlineCode parentName=\"p\">{`contact`}</inlineCode>{` function to join three strings:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`First, the beginning of an HTML image tag.`}</li>\n      <li parentName=\"ul\">{`Then, the current image from the `}<inlineCode parentName=\"li\">{`outputs`}</inlineCode>{` loop, specifying the `}<inlineCode parentName=\"li\">{`presignedUrl`}</inlineCode>{` value`}</li>\n      <li parentName=\"ul\">{`A closing bracket.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"step-eleven---email-the-result\"\n    }}>{`Step Eleven - Email the Result`}</h2>\n    <p>{`The final step will handle emailing the result. You want to ensure it's in the loop for our prompts, but `}<em parentName=\"p\">{`not`}</em>{` the previous loop that iterated over the image results. `}</p>\n    <p>{`For the `}<inlineCode parentName=\"p\">{`To`}</inlineCode>{` field, specify your email and pick anything appropriate for the `}<inlineCode parentName=\"p\">{`Subject`}</inlineCode>{`. `}</p>\n    <p>{`The body should contain the prompt and our `}<inlineCode parentName=\"p\">{`images`}</inlineCode>{` variable:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Here are your generated images for the prompt, @{items('Apply_to_each')?['Title']}\n\n@{variables('images')}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"results\"\n    }}>{`Results`}</h2>\n    <p>{`With the flow complete, we can now save and test. As it processes, it will fire off one email as each prompt is done. The images are somewhat large so the screenshot below only shows one, but the additional results are directly beneath it:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"650px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"108.43750000000001%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/firefly-api-docs/static/7fd87fb4d3bfd89ec59cd67f03a27ee4/5530d/shot6.webp 320w\", \"/firefly-api-docs/static/7fd87fb4d3bfd89ec59cd67f03a27ee4/0c8fb/shot6.webp 640w\", \"/firefly-api-docs/static/7fd87fb4d3bfd89ec59cd67f03a27ee4/309d5/shot6.webp 650w\"],\n            \"sizes\": \"(max-width: 650px) 100vw, 650px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/firefly-api-docs/static/7fd87fb4d3bfd89ec59cd67f03a27ee4/dd4a7/shot6.png 320w\", \"/firefly-api-docs/static/7fd87fb4d3bfd89ec59cd67f03a27ee4/0f09e/shot6.png 640w\", \"/firefly-api-docs/static/7fd87fb4d3bfd89ec59cd67f03a27ee4/663f3/shot6.png 650w\"],\n            \"sizes\": \"(max-width: 650px) 100vw, 650px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/firefly-api-docs/static/7fd87fb4d3bfd89ec59cd67f03a27ee4/663f3/shot6.png\",\n            \"alt\": \"Email example\",\n            \"title\": \"Email example\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}